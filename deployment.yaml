---
apiVersion: v1
kind: Namespace
metadata:
  name: starlink
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: starlink
  name: starlink-ingress
  annotations:
    # Ingress core annotations
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
spec:
  rules:
    - http:
        paths:
          - path: /MO/*
            backend:
              serviceName: monitoring-restapp-nodeport-service
              servicePort: 8086
          - path: /CO/*
            backend:
              serviceName: constellation-restapp-nodeport-service
              servicePort: 8087
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: constellation-microservice
  namespace: starlink
  labels:
    app: constellation-restapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: constellation-restapp
  template:
    metadata:
      labels:
        app: constellation-restapp
    spec:
      containers:
        - name: constellation-restapp
          image: 571454663604.dkr.ecr.us-east-2.amazonaws.com/starlink-constellation-operations:latest
          ports:
            - containerPort: 8087
          env:
            - name: spring.datasource.url
              value: "jdbc:mysql://constellation-mysql.co1kethmgqbj.us-east-2.rds.amazonaws.com:3306/constellation?useSSL=true"
            - name: spring.datasource.username
              value: "root"
            - name: spring.datasource.password
              value: "Password.starlink.constellation"
---
apiVersion: v1
kind: Service
metadata:
  name: constellation-restapp-nodeport-service
  namespace: starlink
  labels:
    app: constellation-restapp
spec:
  type: NodePort
  selector:
    app: constellation-restapp
  ports:
    - port: 8087
      targetPort: 8087
---
apiVersion: v1
kind: Service
metadata:
  name: constellation-mysql
  namespace: starlink
spec:
  type: ExternalName
  externalName: constellation-mysql.co1kethmgqbj.us-east-2.rds.amazonaws.com
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-microservice
  namespace: starlink
  labels:
    app: monitoring-restapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: monitoring-restapp
  template:
    metadata:
      labels:
        app: monitoring-restapp
    spec:
      containers:
        - name: monitoring-restapp
          image: 571454663604.dkr.ecr.us-east-2.amazonaws.com/starlink-monitoring-operations:latest
          ports:
            - containerPort: 8086
          env:
            - name: spring.datasource.url
              value: "jdbc:mysql://satellite-mysql.co1kethmgqbj.us-east-2.rds.amazonaws.com:3306/satellite?useSSL=true"
            - name: spring.datasource.username
              value: "root" # RDS DB Username is dbadmin
            - name: spring.datasource.password
              value: "Password.starlink.satellite"
---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-restapp-nodeport-service
  namespace: starlink
  labels:
    app: monitoring-restapp
spec:
  type: NodePort
  selector:
    app: monitoring-restapp
  ports:
    - port: 8086
      targetPort: 8086
---
apiVersion: v1
kind: Service
metadata:
  name: satellite-mysql
  namespace: starlink
spec:
  type: ExternalName
  externalName: satellite-mysql.co1kethmgqbj.us-east-2.rds.amazonaws.com
